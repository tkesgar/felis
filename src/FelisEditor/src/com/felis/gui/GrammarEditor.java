package com.felis.gui;

import com.felis.lib.*;
import java.io.*;
import java.util.Iterator;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;

public class GrammarEditor extends javax.swing.JFrame {

	private final static String GRAMMAR_FILENAME = "grammar.fls";
	private CNFGrammar grammar;

	public CNFGrammar getGrammar() {
		return grammar;
	}

	public GrammarEditor() {
		initComponents();
		grammar = new CNFGrammar();
		Observer grammarObserver = new Observer() {
			@Override
			public void update(Observable o, Object arg) {
				if (o instanceof CNFGrammar) {
					CNFGrammar g = (CNFGrammar) o;
					String s = "";
					if (g.getStart() != null) {
						s += "Start symbol : " + g.getStart() + "\n";
					}
					for (Iterator<ProductionUnit> it = g.getUnits().iterator(); it.hasNext();) {
						ProductionUnit p = it.next();
						if (p instanceof ProductionPattern) {
							s += "Pattern unit production : ";
						} else {
							s += "Unit production : ";
						}
						s += p.getSymbol() + " -> " + p.getTerminal() + "\n";
					}
					for (Iterator<ProductionNonunit> it = g.getNonunits().iterator(); it.hasNext();) {
						ProductionNonunit p = it.next();
						s += "Non-unit production : " + p.getSymbol() + " -> " + p.getLeft() + " " + p.getRight() + "\n";
					}
					txtProductions.setText(s);
					txtStart.setText(grammar.getStart());
				}
			}
		};
		grammar.addObserver(grammarObserver);

		try {
			FileInputStream fistream = new FileInputStream(GRAMMAR_FILENAME);
			ObjectInputStream oistream = new ObjectInputStream(fistream);
			CNFGrammar grammarLoaded = (CNFGrammar) oistream.readObject();
			grammar.clear();
			for (ProductionUnit p : grammarLoaded.getUnits()) {
				grammar.addUnitProduction(p);
			}
			for (ProductionNonunit p : grammarLoaded.getNonunits()) {
				grammar.addNonunitProduction(p);
			}
			grammar.setStart(grammarLoaded.getStart());
		} catch (ClassNotFoundException | IOException ex) {
			FelisLanguage.fillGrammarWithFelisLanguage(grammar);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtProductions = new javax.swing.JTextArea();
        lblProductions = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnSetToFelis = new javax.swing.JButton();
        btnLoadGrammar = new javax.swing.JButton();
        paneEditGrammar = new javax.swing.JTabbedPane();
        panelUnit = new javax.swing.JPanel();
        lblSymbolNameUnit = new javax.swing.JLabel();
        lblTerminal = new javax.swing.JLabel();
        txtSymbolNameUnit = new javax.swing.JTextField();
        txtTerminal = new javax.swing.JTextField();
        btnAddUnit = new javax.swing.JButton();
        panelNonunit = new javax.swing.JPanel();
        lblSymbolNameNonunit = new javax.swing.JLabel();
        txtSymbolNameNonunit = new javax.swing.JTextField();
        lblLeftSymbol = new javax.swing.JLabel();
        txtLeftSymbol = new javax.swing.JTextField();
        lblRightSymbol = new javax.swing.JLabel();
        txtRightSymbol = new javax.swing.JTextField();
        btnAddNonunit = new javax.swing.JButton();
        panelOther = new javax.swing.JPanel();
        lblStart = new javax.swing.JLabel();
        txtStart = new javax.swing.JTextField();
        btnSetStart = new javax.swing.JButton();
        btnAddDefault = new javax.swing.JButton();
        btnSetToNyan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Grammar Editor");
        setLocationByPlatform(true);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);

        txtProductions.setColumns(20);
        txtProductions.setEditable(false);
        txtProductions.setRows(5);
        jScrollPane1.setViewportView(txtProductions);

        lblProductions.setText("Productions:");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnSetToFelis.setText("Set Grammar to Felis Language");
        btnSetToFelis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetToFelisActionPerformed(evt);
            }
        });

        btnLoadGrammar.setText("Load Grammar from File");
        btnLoadGrammar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadGrammarActionPerformed(evt);
            }
        });

        paneEditGrammar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit Grammar", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BOTTOM));

        lblSymbolNameUnit.setText("Symbol name:");

        lblTerminal.setText("Terminal:");

        btnAddUnit.setText("Add Unit Production");
        btnAddUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUnitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUnitLayout = new javax.swing.GroupLayout(panelUnit);
        panelUnit.setLayout(panelUnitLayout);
        panelUnitLayout.setHorizontalGroup(
            panelUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUnitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSymbolNameUnit)
                    .addGroup(panelUnitLayout.createSequentialGroup()
                        .addGroup(panelUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSymbolNameUnit)
                            .addComponent(lblTerminal))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtTerminal)
                    .addComponent(btnAddUnit, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelUnitLayout.setVerticalGroup(
            panelUnitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUnitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSymbolNameUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSymbolNameUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTerminal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddUnit)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        paneEditGrammar.addTab("Add Unit", panelUnit);

        lblSymbolNameNonunit.setText("Symbol name:");

        lblLeftSymbol.setText("Left symbol:");

        lblRightSymbol.setText("Right symbol:");

        btnAddNonunit.setText("Add Non-Unit Production");
        btnAddNonunit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNonunitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelNonunitLayout = new javax.swing.GroupLayout(panelNonunit);
        panelNonunit.setLayout(panelNonunitLayout);
        panelNonunitLayout.setHorizontalGroup(
            panelNonunitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNonunitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNonunitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSymbolNameNonunit)
                    .addComponent(txtLeftSymbol)
                    .addGroup(panelNonunitLayout.createSequentialGroup()
                        .addGroup(panelNonunitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSymbolNameNonunit)
                            .addComponent(lblLeftSymbol)
                            .addComponent(lblRightSymbol))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtRightSymbol)
                    .addComponent(btnAddNonunit, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelNonunitLayout.setVerticalGroup(
            panelNonunitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNonunitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSymbolNameNonunit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSymbolNameNonunit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLeftSymbol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLeftSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRightSymbol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRightSymbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddNonunit)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        paneEditGrammar.addTab("Add Non-Unit", panelNonunit);

        lblStart.setText("Start symbol:");

        btnSetStart.setText("Set Start Symbol");
        btnSetStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetStartActionPerformed(evt);
            }
        });

        btnAddDefault.setText("Add Default Unit Productions");
        btnAddDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDefaultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOtherLayout = new javax.swing.GroupLayout(panelOther);
        panelOther.setLayout(panelOtherLayout);
        panelOtherLayout.setHorizontalGroup(
            panelOtherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOtherLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOtherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStart)
                    .addComponent(btnSetStart, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(btnAddDefault, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelOtherLayout.createSequentialGroup()
                        .addComponent(lblStart)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelOtherLayout.setVerticalGroup(
            panelOtherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOtherLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSetStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddDefault)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        paneEditGrammar.addTab("Other", panelOther);

        btnSetToNyan.setText("Set Gwammahr teh Nyan-Lang");
        btnSetToNyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetToNyanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProductions)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(paneEditGrammar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLoad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSetToFelis, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                    .addComponent(btnSetToNyan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLoadGrammar, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProductions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paneEditGrammar)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSetToFelis)
                    .addComponent(btnReset)
                    .addComponent(btnLoad)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSetToNyan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoadGrammar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void btnAddUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUnitActionPerformed
		String symbol = txtSymbolNameUnit.getText();
		String terminal = txtTerminal.getText();
		if (!symbol.isEmpty() && !terminal.isEmpty()) {
			boolean isPattern = false;
			for (ProductionUnit p : grammar.getUnits()) {
				if ((p instanceof ProductionPattern) && (symbol.equals(p.getSymbol()))) {
					isPattern = true;
					break;
				}
			}
			if (!isPattern) {
				grammar.addUnitProduction(new ProductionUnit(symbol, terminal));
			} else {
				JOptionPane.showMessageDialog(rootPane, "Cannot add unit production with the same symbol as pattern production.", "", JOptionPane.INFORMATION_MESSAGE);
			}
		} else {
			JOptionPane.showMessageDialog(rootPane, "Symbol and terminal cannot be empty.", "", JOptionPane.INFORMATION_MESSAGE);
		}
	}//GEN-LAST:event_btnAddUnitActionPerformed

	private void btnAddNonunitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNonunitActionPerformed
		String symbol = txtSymbolNameNonunit.getText();
		String left = txtLeftSymbol.getText();
		String right = txtRightSymbol.getText();
		if (!symbol.isEmpty() && !left.isEmpty() && !right.isEmpty()) {
			grammar.addNonunitProduction(new ProductionNonunit(symbol, left, right));
		} else {
			JOptionPane.showMessageDialog(rootPane, "Symbol, left, and right cannot be empty.", "", JOptionPane.INFORMATION_MESSAGE);
		}
	}//GEN-LAST:event_btnAddNonunitActionPerformed

	private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
		int confirm = JOptionPane.showConfirmDialog(
			rootPane,
			"This will clears all the productions! Are you sure?",
			"",
			JOptionPane.OK_CANCEL_OPTION,
			JOptionPane.WARNING_MESSAGE);
		if (confirm == JOptionPane.OK_OPTION) {
			grammar.clear();
		}
	}//GEN-LAST:event_btnResetActionPerformed

	private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
		int confirm = JOptionPane.showConfirmDialog(
			rootPane,
			"Grammar already in database will be overwritten. Are you sure?",
			"",
			JOptionPane.OK_CANCEL_OPTION,
			JOptionPane.INFORMATION_MESSAGE);
		if (confirm == JOptionPane.OK_OPTION) {
			try {
				FileInputStream fistream = new FileInputStream(GRAMMAR_FILENAME);
				ObjectInputStream oistream = new ObjectInputStream(fistream);
				CNFGrammar grammar_load = (CNFGrammar) oistream.readObject();
				grammar.clear();
				for (ProductionUnit p : grammar_load.getUnits()) {
					grammar.addUnitProduction(p);
				}
				for (ProductionNonunit p : grammar_load.getNonunits()) {
					grammar.addNonunitProduction(p);
				}
				grammar.setStart(grammar_load.getStart());
				JOptionPane.showMessageDialog(
					rootPane,
					"Grammar successfully loaded from " + GRAMMAR_FILENAME + ".",
					"",
					JOptionPane.INFORMATION_MESSAGE);
			} catch (ClassNotFoundException | IOException ex) {
				JOptionPane.showMessageDialog(
					rootPane,
					"There was an error in loading the grammar from " + GRAMMAR_FILENAME + ".",
					"",
					JOptionPane.ERROR_MESSAGE);
			}
		}
	}//GEN-LAST:event_btnLoadActionPerformed

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
		int confirm = JOptionPane.showConfirmDialog(
			rootPane,
			"Current grammar will be overwritten. Are you sure?",
			JOptionPane.OPTIONS_PROPERTY,
			JOptionPane.OK_CANCEL_OPTION,
			JOptionPane.INFORMATION_MESSAGE);
		if (confirm == JOptionPane.OK_OPTION) {
			ObjectOutputStream oostream = null;
			try {
				File f = new File(GRAMMAR_FILENAME);
				FileOutputStream fostream = new FileOutputStream(GRAMMAR_FILENAME);
				oostream = new ObjectOutputStream(fostream);
				oostream.writeObject(grammar);
				JOptionPane.showMessageDialog(
					rootPane,
					"Grammar successfully saved to " + GRAMMAR_FILENAME + ".",
					"",
					JOptionPane.INFORMATION_MESSAGE);
			} catch (IOException ex) {
				JOptionPane.showMessageDialog(
					rootPane,
					"There was an error in saving the grammar to " + GRAMMAR_FILENAME + ".",
					"",
					JOptionPane.ERROR_MESSAGE);
			} finally {
				try {
					oostream.close();
				} catch (IOException ex) {
					JOptionPane.showMessageDialog(
					rootPane,
					"There was an error when closing the file " + GRAMMAR_FILENAME + ".",
					"",
					JOptionPane.ERROR_MESSAGE);
				}
			}
		}
	}//GEN-LAST:event_btnSaveActionPerformed

	private void btnSetToFelisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetToFelisActionPerformed
		int confirm = JOptionPane.showConfirmDialog(
			rootPane,
			"Current grammar will be overwritten. Are you sure?",
			"",
			JOptionPane.OK_CANCEL_OPTION,
			JOptionPane.INFORMATION_MESSAGE);
		if (confirm == JOptionPane.OK_OPTION) {
			FelisLanguage.fillGrammarWithFelisLanguage(grammar);
		}
	}//GEN-LAST:event_btnSetToFelisActionPerformed

	private void btnSetStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetStartActionPerformed
		grammar.setStart(txtStart.getText());
	}//GEN-LAST:event_btnSetStartActionPerformed

	private void btnLoadGrammarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadGrammarActionPerformed
		int confirm = JOptionPane.showConfirmDialog(
			rootPane,
			"Current grammar will be overwritten. Are you sure?",
			"",
			JOptionPane.OK_CANCEL_OPTION,
			JOptionPane.INFORMATION_MESSAGE);
		if (confirm == JOptionPane.OK_OPTION) {
			String filename = JOptionPane.showInputDialog(
				rootPane,
				"Please input path to the grammar file:",
				"",
				JOptionPane.PLAIN_MESSAGE);
			try {
				InputProcessor.loadGrammarFromFile(grammar, new File(filename));
			} catch (FileNotFoundException ex) {
				JOptionPane.showMessageDialog(
					rootPane,
					"Cannot find the file " + filename + ".\nMake sure you have typed a correct path, then try again.",
					"",
					JOptionPane.ERROR_MESSAGE);
			} catch (IOException ex) {
				JOptionPane.showMessageDialog(
					rootPane,
					"An error occured when reading " + filename + ".\nMake sure the file is correctly written, then try again.",
					"",
					JOptionPane.ERROR_MESSAGE);
			}
		}
	}//GEN-LAST:event_btnLoadGrammarActionPerformed

	private void btnSetToNyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetToNyanActionPerformed
		int confirm = JOptionPane.showConfirmDialog(
			rootPane,
			"Cuwwent gwammahr ill bi ovehwitten. Aw ye surr?",
			"",
			JOptionPane.OK_CANCEL_OPTION,
			JOptionPane.INFORMATION_MESSAGE);
		if (confirm == JOptionPane.OK_OPTION) {
			FelisLanguage.fillGrammarWithFelisLanguageV2(grammar);
		}
	}//GEN-LAST:event_btnSetToNyanActionPerformed

	private void btnAddDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDefaultActionPerformed
		FelisLanguage.addDefaultConstants(grammar);
	}//GEN-LAST:event_btnAddDefaultActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDefault;
    private javax.swing.JButton btnAddNonunit;
    private javax.swing.JButton btnAddUnit;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnLoadGrammar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSetStart;
    private javax.swing.JButton btnSetToFelis;
    private javax.swing.JButton btnSetToNyan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLeftSymbol;
    private javax.swing.JLabel lblProductions;
    private javax.swing.JLabel lblRightSymbol;
    private javax.swing.JLabel lblStart;
    private javax.swing.JLabel lblSymbolNameNonunit;
    private javax.swing.JLabel lblSymbolNameUnit;
    private javax.swing.JLabel lblTerminal;
    private javax.swing.JTabbedPane paneEditGrammar;
    private javax.swing.JPanel panelNonunit;
    private javax.swing.JPanel panelOther;
    private javax.swing.JPanel panelUnit;
    private javax.swing.JTextField txtLeftSymbol;
    private javax.swing.JTextArea txtProductions;
    private javax.swing.JTextField txtRightSymbol;
    private javax.swing.JTextField txtStart;
    private javax.swing.JTextField txtSymbolNameNonunit;
    private javax.swing.JTextField txtSymbolNameUnit;
    private javax.swing.JTextField txtTerminal;
    // End of variables declaration//GEN-END:variables
}
